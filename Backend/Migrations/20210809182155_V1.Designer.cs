// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(BibliotekaContext))]
    [Migration("20210809182155_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend.Models.Biblioteka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Adresa");

                    b.Property<int>("BrojKnjiga")
                        .HasColumnType("int")
                        .HasColumnName("BrojKnjiga");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ime");

                    b.HasKey("Id");

                    b.ToTable("Biblioteka");
                });

            modelBuilder.Entity("Backend.Models.Knjiga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Autor");

                    b.Property<int>("GodinaIzdanja")
                        .HasColumnType("int")
                        .HasColumnName("GodinaIzdanja");

                    b.Property<string>("Naslov")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Naslov");

                    b.Property<int?>("PripadaPolicaId")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Slika");

                    b.HasKey("Id");

                    b.HasIndex("PripadaPolicaId");

                    b.ToTable("Knjige");
                });

            modelBuilder.Entity("Backend.Models.Polica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PripadaBiblioteciId")
                        .HasColumnType("int");

                    b.Property<string>("Slovo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Slovo");

                    b.HasKey("Id");

                    b.HasIndex("PripadaBiblioteciId");

                    b.ToTable("Polica");
                });

            modelBuilder.Entity("Backend.Models.Knjiga", b =>
                {
                    b.HasOne("Backend.Models.Polica", "PripadaPolica")
                        .WithMany("Knjige")
                        .HasForeignKey("PripadaPolicaId");

                    b.Navigation("PripadaPolica");
                });

            modelBuilder.Entity("Backend.Models.Polica", b =>
                {
                    b.HasOne("Backend.Models.Biblioteka", "PripadaBiblioteci")
                        .WithMany("Police")
                        .HasForeignKey("PripadaBiblioteciId");

                    b.Navigation("PripadaBiblioteci");
                });

            modelBuilder.Entity("Backend.Models.Biblioteka", b =>
                {
                    b.Navigation("Police");
                });

            modelBuilder.Entity("Backend.Models.Polica", b =>
                {
                    b.Navigation("Knjige");
                });
#pragma warning restore 612, 618
        }
    }
}
